---
import { STATUS_FOLDED } from "@/scripts/utils/fold";

const { display = true } = Astro.props;
---

<div
  class={`pl-4 border-l border-l-gray-700 quote-component ${display ? "my-10" : "my-2"}`}
>
  <div class="mb-1.5">
    <slot />
  </div>
  <div
    class="text-[13.25px] sm:text-[14.5px] font-light quote-component-detail"
    data-status={STATUS_FOLDED}
  >
    <div class="pb-1.5">
      <slot name="detail" />
    </div>
  </div>
  <div class="text-[13.25px] sm:text-[14.5px] font-light">
    <slot name="name" />
  </div>
</div>

<script>
  import { fold, unfold } from "@/scripts/utils/fold";
  import { zip } from "lodash-es";

  const quotes = document.querySelectorAll<HTMLDivElement>(".quote-component");
  const detail = document.querySelectorAll<HTMLDivElement>(
    ".quote-component-detail",
  );
  const quoteDetailPairs = zip(quotes, detail);
  quoteDetailPairs.forEach(([quote, detail]) => {
    if (quote === undefined) {
      throw new Error(
        "Expected not undefined 'quote', but received 'undefined'.",
      );
    }
    if (detail === undefined) {
      throw new Error(
        "Expected not undefined 'trigger', but received 'undefined'.",
      );
    }

    if (detail.textContent === null || detail.textContent.length === 0) {
      return; // ignore silently; no need to unfold
    }

    quote.addEventListener("mouseenter", () => {
      unfold(detail);
    });
    quote.addEventListener("mouseleave", () => {
      fold(detail);
    });
  });
</script>

<style>
  .quote-component-detail {
    max-height: 0;
    transform-origin: top;
    transition-property: opacity, max-height, transform;
    transition-duration: 0.3s;
    transition-timing-function: ease;
  }

  .quote-component-detail[data-status="folded"] {
    transform: scaleY(0);
    opacity: 0;
    transition-delay: 0s;
  }

  .quote-component-detail[data-status="unfolded"] {
    transform: scaleY(1);
    opacity: 1;
    transition-delay: 0.8s;
  }
</style>
