---
import { sortBlogCollectionByTitle } from "@/scripts/utils/collections";
import { getCollection } from "astro:content";
import Heading from "@/components/core/Heading.astro";
import { range } from "lodash-es";
import ListPage from "@/layouts/ListPage.astro";

const posts = sortBlogCollectionByTitle(await getCollection("blog"));

const getCodePoint = (char: string): number => {
  const codePoint = char.codePointAt(0);
  if (codePoint === undefined) {
    throw new Error(`Undefined codepoint from '${char}'`);
  }
  return codePoint;
};

const getInitialConsonant = (str: string): string => {
  const first = getCodePoint(str[0]);
  if (first < getCodePoint("가") || getCodePoint("힣") < first) {
    // non-hangul
    return str[0];
  }

  const hangulConsonant = range(getCodePoint("ᄀ"), getCodePoint("ᄒ") + 1).map(
    (i) => String.fromCodePoint(i),
  );
  const index = Math.floor(
    (getCodePoint(str[0]) - getCodePoint("가")) / (21 * 28),
  );
  const initialConsonant = hangulConsonant[index];

  return initialConsonant;
};

function getArrayOrSet<T, U>(map: Map<T, U[]>, key: T): U[] {
  let array = map.get(key);
  if (array === undefined) {
    array = [];
    map.set(key, array);
  }

  return array;
}

const postGroups = new Map<string, { title: string; id: string }[]>();
for (const post of posts) {
  const consonant = getInitialConsonant(post.data.title);
  getArrayOrSet(postGroups, consonant).push({
    title: post.data.title,
    id: post.id,
  });
}
---

<ListPage pageTitle="Index">
  <div>
    <Heading>Posts.</Heading>
    <div class="grid grid-cols-2 gap-x-1 gap-y-2">
      {
        Array.from(postGroups.entries()).map(([name, entries]) => {
          return (
            <div>
              <p class="sm:text-[16pt] text-[14pt] font-semibold">{name}</p>
              <div>
                {entries.map((entry) => (
                  <a
                    href={`/posts/${entry.id}/`}
                    class="block my-1 text-gray-400"
                  >
                    <div class="flex items-center gap-4">
                      <div class="flex-1 w-full h-full">
                        <p class="text-base font-light sm:text-[12pt] text-[10.5pt] text-gray-600 hover:text-gray-900">
                          {entry.title}
                        </p>
                      </div>
                    </div>
                  </a>
                ))}
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</ListPage>
