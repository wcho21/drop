---
import Base from "../../layouts/Base.astro";
import Footer from "../../components/common/Footer.astro";
import { getCollection } from "astro:content";
import { formatDate } from "../../scripts/utils/formatters";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  const staticPaths = entries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));

  return staticPaths;
}

type BlogEntry = CollectionEntry<"blog">;
interface Entry extends Pick<BlogEntry, "body" | "collection" | "data" | "render"> {
  id: string,
  slug: string,
}
interface Props {
  entry: Entry,
}

const { entry } = Astro.props;
const { title, date } = entry.data;
const { Content } = await entry.render();
---

<Base pageTitle={title}>
  <div class="text-zinc-800">
    <div class="border-t-8 border-b-4 pt-4 pb-8 border-zinc-800">
      <header class="mb-16 pb-6 font-serif border-b border-zinc-800">
        <h1 class="text-[32px] font-bold mb-4">{title}</h1>
        <p class="text-[14px] font-light"><time>{formatDate(date)}</time></p>
      </header>

      <main id="post-main">
        <Content />
      </main>
    </div>

    <div class="mt-12">
      <a href="/">
        <div class="rounded-md bg-gray-100 p-2 w-1/2">돌아가기</div>
      </a>
    </div>

    <div class="mt-12">
      <Footer />
    </div>
  </div>
</Base>

<style is:global>
  #post-main {
    @apply text-[16px] text-zinc-800 text-justify;
  }

  #post-main > h1 {
    @apply text-[24px] font-bold mt-16 mb-2 font-serif;
  }

  #post-main > h2 {
    @apply text-[18px] font-bold mt-8 mb-2 font-serif;
  }

  #post-main > p {
    @apply my-2;
  }

  #post-main > .astro-code {
    @apply text-[0.875em] pl-4 border-l border-zinc-500;
  }

  #post-main > .katex-display {
    @apply overflow-x-auto overflow-y-hidden;
  }

  #post-main > p > a {
    @apply text-blue-500;
  }
</style>
