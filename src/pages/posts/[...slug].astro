---
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import Heading from "@/components/core/Heading.astro";
import Home from "@/components/icon/Home.astro";
import ArticleCard from "@/components/page/ArticleCard.astro";
import Giscus from "@/components/post/Giscus.astro";
import Share from "@/components/post/ShareButton.astro";
import Base from "@/layouts/Base.astro";
import { getThumbnails } from "@/scripts/utils/assets";
import { sortBlogCollectionByDate } from "@/scripts/utils/collections";
import { formatDate } from "@/scripts/utils/formatters";

export async function getStaticPaths() {
  const articles = sortBlogCollectionByDate(await getCollection("blog"));
  const staticPaths = articles.map((entry, i) => ({
    params: { slug: entry.id },
    props: {
      nextEntry: i > 0 ? articles[i - 1] : undefined,
      prevEntry: i < articles.length - 1 ? articles[i + 1] : undefined,
      entry,
    },
  }));

  return staticPaths;
}

type BlogEntry = CollectionEntry<"blog">;
interface Props {
  entry: BlogEntry;
  nextEntry?: BlogEntry;
  prevEntry?: BlogEntry;
}

const { entry, prevEntry, nextEntry } = Astro.props;
const { href } = Astro.url;
const { title, summary, date } = entry.data;
const { Content } = await render(entry);

const image = getThumbnails()[entry.data.thumbnail];
---

<Base pageTitle={title} desc={summary} image={image}>
  <div>
    <header class="mb-12 pt-12 font-serif border-t-8 border-gray-800">
      <div class="font-semibold">
        <Heading>{title}</Heading>
      </div>
      <p>{summary}</p>
      <p class="mt-2 text-[14px] font-light"><time>{formatDate(date)}</time></p>
    </header>

    <main id="post-main" class="my-12 pt-12 border-t border-gray-800">
      <Content />
    </main>
  </div>

  <div class="my-12 flex">
    <div class="mx-auto">
      <Share url={href} title={title} />
    </div>
  </div>

  <div class="my-12 pt-12 border-t border-gray-800">
    {import.meta.env.PROD ? (
      <Giscus />
    ) : (<p style='text-align: center'>(Giscus will be rendered here on production mode)</p>)}
  </div>

  <nav id="post-nav" class="my-12 pt-12 border-t border-gray-800">
    {
      nextEntry && <ArticleCard article={nextEntry} />
    }
    {
      prevEntry && <ArticleCard article={prevEntry} />
    }
    <div class="mt-4">
      <a href="/" class="block py-1.5 px-3 mx-auto w-fit">
        <Home />
      </a>
    </div>
  </nav>
</Base>

<style is:global>
  @reference "tailwindcss";
  
  #post-main {
    @apply text-[14px] md:text-[16px] text-gray-800 text-justify;
  }

  #post-main .serif {
    @apply font-serif;
  }

  #post-main > h1 {
    @apply text-[20px] md:text-[24px] font-bold mt-16 mb-2 font-serif;
  }

  #post-main > h2 {
    @apply text-[16px] md:text-[18px] font-bold mt-8 mb-2 font-serif;
  }

  #post-main > p {
    @apply my-2;
  }

  #post-main code {
    @apply tracking-tight;
  }

  #post-main > .astro-code {
    @apply my-2 text-[0.875em] border-l border-gray-500 text-left whitespace-pre-wrap pl-[1.25em];
  }

  #post-main > .astro-code.has-diff {
    position: relative;
  }

  #post-main > .astro-code span.line {
    @apply inline-block ml-[-1.25em] pl-[1.25em];
  }

  #post-main > .astro-code span.line.highlighted {
    @apply bg-sky-100;
    width: calc(100% + 1.25em)
  }

  #post-main > .astro-code span.line.highlighted.warning {
    @apply bg-amber-100;
    width: calc(100% + 1.25em)
  }

  #post-main > .astro-code span.line.highlighted.error {
    @apply bg-rose-100;
    width: calc(100% + 1.25em)
  }

  #post-main > .astro-code span.line.diff.add {
    @apply bg-emerald-100;
    width: calc(100% + 1.25em)
  }

  #post-main > .astro-code span.line.diff.add::before {
    @apply text-emerald-400 absolute left-0 w-[1.25em] inline-block text-center;
    content: "+";
  }

  #post-main > .astro-code span.line.diff.remove {
    @apply bg-rose-100;
    width: calc(100% + 1.25em)
  }

  #post-main > .astro-code span.line.diff.remove::before {
    @apply text-rose-400 absolute left-0 w-[1.25em] inline-block text-center;
    content: "-";
  }

  #post-main > .astro-code .highlighted-word {
    @apply m-[-2px] p-[1px] border border-slate-300 bg-slate-50 rounded-md;
  }

  #post-main > .katex-display {
    @apply overflow-x-auto overflow-y-hidden;
  }

  #post-main > .katex-display > .katex > .katex-html > .tag {
    right: 0.25ex; /* hackish code; to remove scroll that \tag{} makes */
  }

  #post-main a {
    @apply text-blue-500;
  }

  #post-main > ul,
  #post-main > ol {
    @apply ml-6;
  }

  #post-main > ul > li,
  #post-main > ol > li {
    @apply my-2;
  }

  #post-main > ul > li > strong,
  #post-main > ol > li > strong {
    @apply font-semibold;
  }

  #post-main > ol > li {
    @apply list-decimal;
  }

  #post-main > ul > li {
    @apply list-disc;
  }
</style>
